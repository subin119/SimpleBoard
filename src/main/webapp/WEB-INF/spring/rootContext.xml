<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
<!-- DriverManager.getConnection()를 대체할 객체 -->
<bean	id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:XE"/>
		<property name="username" value="SIMPLE_BOARD"/>
		<property name="password" value="SIMPLE_BOARD"/>
</bean>

<bean	id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"/>
	<property name="configLocation" value="classpath:mybatis.xml"/>
	
</bean>
<bean	id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg	name="sqlSessionFactory"
							ref="sqlSessionFactory"/>
</bean>

<!-- transaction 설정 -->
<bean	id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"/>
</bean>

<!--  Transaction 수행 Method 설정 -->
<tx:advice	id="txAdvice"
			transaction-manager="transactionManager">
	<tx:attributes>
		<!-- Insert -->
		<tx:method name="add*" rollback-for="RuntimeException"/>
		<tx:method name="new*" rollback-for="RuntimeException"/>
		<tx:method name="append*" rollback-for="RuntimeException"/>
		<tx:method name="insert*" rollback-for="RuntimeException"/>
		<tx:method name="regist*" rollback-for="RuntimeException"/>
		<tx:method name="put*" rollback-for="RuntimeException"/>
	
	<!-- update -->
		<tx:method name="update*" rollback-for="RuntimeException"/>
		<tx:method name="modify*" rollback-for="RuntimeException"/>
		<tx:method name="replace*" rollback-for="RuntimeException"/>
		<tx:method name="fix*" rollback-for="RuntimeException"/>
		<tx:method name="plus*" rollback-for="RuntimeException"/>
		<tx:method name="minus*" rollback-for="RuntimeException"/>
	
		<!-- delete -->
		<tx:method name="delete" rollback-for="RuntimeException"/>
		<tx:method name="remove*" rollback-for="RuntimeException"/>
		<tx:method name="detach*" rollback-for="RuntimeException"/>
		<tx:method name="drop*" rollback-for="RuntimeException"/>
		
		<!-- select -->
		<tx:method name="select" read-only="true"/>
		<tx:method name="get*" read-only="true"/>
		
		<!-- 공통 -->
		<tx:method name="tx*" rollback-for="RuntimeException"/>
	</tx:attributes>
</tx:advice>
	
	<!-- 트랜잭션이 적용될 업무 담당 경계 설정 -->
		<!-- 업무 경계 설정 -->
		<!-- expression : 업무 경계 설정 Format -->
			<!-- 트랜잭션 실행 범위 지정 및 모니터링 시작 설정-->
	<aop:config>
		<aop:pointcut	expression="execution(public * com.ktds..service.*Impl.*(..))" 
						id="servicePublicMethod"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePublicMethod"/>
	</aop:config>
</beans>
